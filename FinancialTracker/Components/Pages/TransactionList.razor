@page "/"
@using FinancialTracker.Services
@using FinancialTracker.Models
@inject TransactionService TransactionService

<h2 class="text-xl font-bold mb-2">Pregled</h2>

<div class="grid grid-cols-3 gap-4 mb-6">
    <div class="bg-green-100 p-4 rounded shadow">
        <div class="text-green-700 font-semibold">Ukupni Prihodi</div>
        <div class="text-xl font-bold text-green-900">@TotalIncome.ToString("0.00") RSD</div>
    </div>

    <div class="bg-red-100 p-4 rounded shadow">
        <div class="text-red-700 font-semibold">Ukupni Rashodi</div>
        <div class="text-xl font-bold text-red-900">@TotalExpense.ToString("0.00") RSD</div>
    </div>

    <div class="bg-blue-100 p-4 rounded shadow">
        <div class="text-blue-700 font-semibold">Balans</div>
        <div class="text-xl font-bold text-blue-900">@Balance.ToString("0.00") RSD</div>
    </div>
</div>


<div class="flex justify-end mb-4">
    <NavLink href="/add">
        <button class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
            ➕ Dodaj Transakciju
        </button>
    </NavLink>
</div>

<div class="flex justify-end mb-4">
    <NavLink href="/categories">
        <button class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
            ➕ Dodaj Kategoriju
        </button>
    </NavLink>
</div>

<div class="flex justify-end mb-4">
    <button class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
    @onclick="async () => await DeleteAllTransactions()">
        Izbrisi sve
    </button>
</div>

<div class="flex justify-end mb-4">
    <button class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
            @onclick="async () => await RefreshTransactions()">
        Osveži listu transakcija
    </button>
</div>

<h2 class="text-xl font-bold mb-4">Sve Transakcije</h2>

@if (transactions == null)
{
    <p>Učitavanje...</p>
}
else if (!transactions.Any())
{
    <p>Nema unetih transakcija.</p>
}
else
{
    <ul class="space-y-2">
        @foreach (var t in transactions)
        {
            <li class="border p-3 rounded shadow-sm">
                <h1>@t.Name</h1>
                <div><strong>@t.Type</strong> - @t.Amount.ToString("0.00") RSD</div>
                <div>Kategorija: @t.Category</div>
                <div>Datum: @t.Date.ToShortDateString()</div>
                @if (!string.IsNullOrWhiteSpace(t.Note))
                {
                    <div>Napomena: @t.Note</div>
                }
                <button title="Obriši transakciju"
                class="bg-red-600 text-white px-2 py-1 rounded hover:bg-red-700 mt-2"
                @onclick="async () => await DeleteTransaction(t.Id)">
                    🗑️ Obriši
                </button>

            </li>
        }
    </ul>
}

@code {
    private List<Transaction> transactions;

    private decimal TotalIncome => transactions?.Where(t => t.Type == TransactionType.Income).Sum(t => t.Amount) ?? 0;
    private decimal TotalExpense => transactions?.Where(t => t.Type == TransactionType.Expense).Sum(t => t.Amount) ?? 0;
    private decimal Balance => TotalIncome - TotalExpense;

    protected override async Task OnInitializedAsync()
    {
        transactions = await TransactionService.GetTransactions();
    }

    private async Task DeleteTransaction(int id)
    {
        await TransactionService.DeleteTransaction(id);
        transactions = await TransactionService.GetTransactions();
    }

    private async Task DeleteAllTransactions()
    {
        await TransactionService.DeleteAllTransactions();
        transactions = await TransactionService.GetTransactions();
    }

    private async Task RefreshTransactions()
    {
        transactions = await TransactionService.GetTransactions();
    }
}
