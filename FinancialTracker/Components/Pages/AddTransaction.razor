@page "/add"
@using FinancialTracker.Models
@using FinancialTracker.Services
@inject TransactionService TransactionService
@inject NavigationManager Navigation

<h2>Dodaj Transakciju</h2>

<EditForm Model="newTransaction" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="space-y-4">
        <div>
            <InputNumber @bind-Value="newTransaction.Amount" placeholder="Iznos" class="input" />
            <ValidationMessage For="@(() => newTransaction.Amount)" />
        </div>

        <div>
            <InputText @bind-Value="newTransaction.Name" placeholder="Naziv" class="input" />
            <ValidationMessage For="@(() => newTransaction.Name)" />
        </div>

        <div>
            <InputSelect @bind-Value="newTransaction.Type" class="input">
                <option value="Income">Prihod</option>
                <option value="Expense">Rashod</option>
            </InputSelect>
            <ValidationMessage For="@(() => newTransaction.Type)" />
        </div>

        <div>
            <InputSelect @bind-Value="selectedCategoryName" class="input">
                <option value="">-- Odaberi kategoriju --</option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.Name">@cat.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => newTransaction.Category)" />
        </div>

        <div>
            <InputDate @bind-Value="newTransaction.Date" class="input" />
            <ValidationMessage For="@(() => newTransaction.Date)" />
        </div>

        <div>
            <InputText @bind-Value="newTransaction.Note" placeholder="Napomena" class="input" />
            <ValidationMessage For="@(() => newTransaction.Note)" />
        </div>

        <div class="space-x-2">
            <button type="submit" class="btn btn-primary">
                💾 Sačuvaj
            </button>

            <button type="button" class="btn btn-secondary" @onclick="GoBack">
                🔙 Otkaži
            </button>
        </div>
    </div>
</EditForm>

@code {
    private Transaction newTransaction = new()
        {
            Date = DateTime.Now
        };

    private List<Category> categories = new();

    private string selectedCategoryName
    {
        get => newTransaction.Category;
        set => newTransaction.Category = value;
    }

    protected override async Task OnInitializedAsync()
    {
        categories = await TransactionService.GetCategories();
    }

    private async Task HandleValidSubmit()
    {
        await TransactionService.AddTransaction(newTransaction);
        Navigation.NavigateTo("/");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/");
    }
}